[
  {
    "objectID": "introduccion.html",
    "href": "introduccion.html",
    "title": "1  Introducción",
    "section": "",
    "text": "Carga de paquetes:\n\nlibrary(tidyverse)\nlibrary(arm)\nlibrary(readr)\n\nEjemplo de datos con medidas repetidas:\nConjunto de datos longitudinal de unos 2000 adolescentes australianos cuyos patrones de consumo de tabaco se registraron cada seis meses (a través de un cuestionario) durante un período de tres años.\nCarga de datos:\n\nsmoking &lt;- read_delim('./data/ARM_Data/smoking/smoke_pub.dat') \n\nRows: 8730 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \"\\t\"\ndbl (5): newid, sex(1=F), parsmk, wave, smkreg\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nsmoking &lt;- smoking %&gt;% rename(sex = `sex(1=F)`) %&gt;%\n  mutate(sex = factor(sex))\n\nY graficamos la prevalencia en del fumado en cada una de las aplicaciones del cuestionario (wave) para cada uno de los sexos:\n\nprevalencia &lt;- smoking %&gt;%\n  group_by(sex,wave) %&gt;%\n  summarise(prevalencia = mean(smkreg)) \n\n`summarise()` has grouped output by 'sex'. You can override using the `.groups`\nargument.\n\nggplot()+geom_line(data=prevalencia,aes(x=wave,y=prevalencia,color = sex)\n                  )+theme_minimal()+labs(title = 'Prevalencia de fumado por sexo',\n                                          x = 'Aplicación del cuestionario',\n                                          y = 'Prevalencia de fumado')\n\n\n\n\n\n\n\n\nTambién podemos separar la información propia del nivel 1 (waves) y los de nivel más agrupado o nivel 2 (individuos):\n\nsmoking_ind &lt;- smoking %&gt;% \n  dplyr::select(wave,newid,smkreg) %&gt;%\n  arrange(wave,newid)\n\nhead(smoking_ind)\n\n# A tibble: 6 × 3\n   wave newid smkreg\n  &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;\n1     1     1      0\n2     1     2      0\n3     1     3      0\n4     1     4      0\n5     1     5      0\n6     1     6      0\n\n\n\nsmoking_group &lt;- smoking %&gt;% \n  dplyr::select(newid,sex,parsmk) %&gt;%\n  distinct()\n\nhead(smoking_group)\n\n# A tibble: 6 × 3\n  newid sex   parsmk\n  &lt;dbl&gt; &lt;fct&gt;  &lt;dbl&gt;\n1     1 1          0\n2     2 0          0\n3     3 1          0\n4     4 1          0\n5     5 0          0\n6     6 0          0",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introducción</span>"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Modelos Mixtos",
    "section": "",
    "text": "Prefacio\nNotas computacionales de clase para el curso SP1653, Modelos Mixtos.",
    "crumbs": [
      "Prefacio"
    ]
  },
  {
    "objectID": "MLMbasicos.html",
    "href": "MLMbasicos.html",
    "title": "2  Modelos Lineales Multinivel básicos",
    "section": "",
    "text": "2.1 Pooling completo vs no-pooling\nCarga de datos de radon y depuración:\nradon &lt;- read_delim('./data/ARM_Data/radon/srrs2.dat',trim_ws = TRUE)\n\nRows: 12777 Columns: 25\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (11): state, state2, zip, basement, rep, wave, starttm, stoptm, startdt,...\ndbl (13): idnum, stfips, region, typebldg, floor, room, stratum, activity, p...\nlgl  (1): windoor\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nradon_data &lt;- radon %&gt;%\n  filter(state == \"MN\") %&gt;%\n  mutate(\n    radon = activity,\n    log_radon = log(if_else(activity == 0, 0.1, activity)),\n    floor = floor,  # 0 for basement, 1 for first floor\n    county_name = as.vector(county)\n  ) %&gt;%\n  group_by(county_name) %&gt;%\n  mutate(\n    county = cur_group_id()\n  ) %&gt;%\n  ungroup()\nBoxplot de los niveles de radon por ciudad:\nmean_radon &lt;- mean(radon_data$log_radon, na.rm = TRUE)\n\nggplot(radon_data, aes(x = county_name, y = log_radon)) +\n  geom_boxplot() +\n  geom_abline(intercept = mean_radon, slope = 0, color = \"red\") +\n  labs(title = \"Boxplot of Log Radon Levels by City\",\n       x = \"City\",\n       y = \"Log Radon Level\") +\n  theme_minimal()\nBoxplot de los niveles de radon por ciudad ordenados por tamaño de muestra:\ntabla_ns &lt;- radon_data %&gt;% group_by(county_name) %&gt;% summarise(n = n())  \n\nradon_data &lt;- radon_data %&gt;% \n  left_join(tabla_ns, by = \"county_name\")\n\n\nradon_data &lt;- radon_data %&gt;%\n  mutate(county_name = factor(county_name, levels = tabla_ns$county_name[order(tabla_ns$n)]))\n\nggplot(radon_data, aes(x = county_name, y = log_radon)) +\n  geom_boxplot() +\n  geom_abline(intercept = mean_radon, slope = 0, color = \"red\") +\n  labs(title = \"Boxplot of Log Radon Levels by County (Sorted by Sample Size)\",\n       x = \"City\",\n       y = \"Log Radon Level\") +\n  theme_minimal()\nBoxplot de los niveles de radon por ciudad usando partial-pooling (Multinivel):\nlmer_radon &lt;- lmer(log_radon ~ 1 + (1|county_name), data = radon_data)\n\nradon_data &lt;- radon_data %&gt;% \n  mutate(log_radon_pred = predict(lmer_radon))\n\nggplot(radon_data, aes(x = county_name, y = log_radon_pred)) +\n  geom_boxplot() +\n  geom_abline(intercept = mean_radon, slope = 0, color = \"red\") +\n  labs(title = \"Boxplot of Log Radon Levels by City (Predicted)\",\n       x = \"City\",\n       y = \"Log Radon Level (Predicted)\") +\n  theme_minimal()\nPooling completo vs no-pooling con una covariable:\nmuestra_counties &lt;- c('LAC QUI PARLE', 'AITKIN','KOOCHICHING',\n                      'DOUGLAS','CLAY','STEARNS','RAMSEY','ST LOUIS')\n\nradon_data_r &lt;- radon_data %&gt;% mutate(county_s = as.character(county_name)) %&gt;%\n  filter(county_s %in% muestra_counties)\n\n\nregresion_pooling &lt;- lm(log_radon ~ floor, data = radon_data_r)\nregresion_no_pooling &lt;- lm(log_radon ~ -1+floor+county_name, data = radon_data_r)\n\n\ncoef_df &lt;- coef(regresion_no_pooling)\n\ncoef_data &lt;- data.frame(\n  county_s = sub(\"county\", \"\", names(coef_df)[grep(\"county\", names(coef_df))]),\n  slope = coef_df[grep(\"floor\", names(coef_df))],\n  intercept = coef_df[grep(\"county\", names(coef_df))]\n)\n\nWarning in data.frame(county_s = sub(\"county\", \"\",\nnames(coef_df)[grep(\"county\", : row names were found from a short variable and\nhave been discarded\n\nradon_data_r &lt;- radon_data_r %&gt;%\n  left_join(coef_data, by = \"county_s\")\n\nggplot(data = radon_data_r) +\n  geom_point(aes(x = floor, y = log_radon)) +\n  geom_abline(aes(intercept = intercept, slope = slope), color = \"blue\") +  # Specific regression lines for each county\n  geom_abline(intercept = coef(regresion_pooling)[1], slope = coef(regresion_pooling)[2], color = \"red\") +  # General regression line\n  facet_wrap(~county_s) +\n  labs(title = \"Radon Levels by Floor with Specific and General Regression Lines\",\n       x = \"Floor\",\n       y = \"Log Radon Level\") +\n  theme_minimal()\n\nWarning: Removed 209 rows containing missing values or values outside the scale range\n(`geom_abline()`).\nPooling parcial con una covariable (Multinivel):\nlmer_radon_floor &lt;- lmer(log_radon ~ floor + (1|county_name), \n                         data = radon_data_r)\n\n\nfixed_effect &lt;- fixef(lmer_radon_floor)\nrandom_effects &lt;- ranef(lmer_radon_floor)$county\n\n\ncoef_data_lmer &lt;- data.frame(\n  county_s = rownames(random_effects),\n  intercept_lmer = fixed_effect[1] + random_effects[, 1], \n  slope_lmer = fixed_effect[2]  \n)\n\nWarning in data.frame(county_s = rownames(random_effects), intercept_lmer =\nfixed_effect[1] + : row names were found from a short variable and have been\ndiscarded\n\nradon_data_r &lt;- radon_data_r %&gt;%\n  left_join(coef_data_lmer, by = \"county_s\")\n\nggplot(data = radon_data_r) +\n  geom_point(aes(x = floor, y = log_radon)) +\n  geom_abline(aes(intercept = intercept_lmer, slope = slope_lmer), color = \"blue\") +  # Specific regression lines for each county\n  geom_abline(intercept = fixed_effect[1], slope = fixed_effect[2], color = \"red\") +  # General regression line (fixed effects only)\n  facet_wrap(~county_s) +\n  labs(title = \"Radon Levels by Floor with Specific and General Regression Lines\",\n       x = \"Floor\",\n       y = \"Log Radon Level\") +\n  theme_minimal()",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Modelos Lineales Multinivel básicos</span>"
    ]
  },
  {
    "objectID": "MLMbasicos.html#modelo-multinivel-pooling-parcial",
    "href": "MLMbasicos.html#modelo-multinivel-pooling-parcial",
    "title": "2  Modelos Lineales Multinivel básicos",
    "section": "2.2 Modelo multinivel (pooling parcial)",
    "text": "2.2 Modelo multinivel (pooling parcial)\nModelo con intercepto variable por condado y piso\n\nM1 &lt;- lmer (log_radon ~ floor + (1 | county_name),data = radon_data)\ndisplay (M1)\n\nlmer(formula = log_radon ~ floor + (1 | county_name), data = radon_data)\n            coef.est coef.se\n(Intercept)  1.46     0.05  \nfloor       -0.69     0.07  \n\nError terms:\n Groups      Name        Std.Dev.\n county_name (Intercept) 0.33    \n Residual                0.76    \n---\nnumber of obs: 919, groups: county_name, 85\nAIC = 2179.3, DIC = 2156\ndeviance = 2163.7 \n\n\nCoeficientes estimados de regresion\n\ncoef (M1)\n\n$county_name\n                  (Intercept)      floor\nMAHNOMEN            1.4456250 -0.6929937\nMURRAY              1.6253581 -0.6929937\nWILKIN              1.5835784 -0.6929937\nCOOK                1.2432992 -0.6929937\nFILLMORE            1.4409443 -0.6929937\nLAC QUI PARLE       1.8680900 -0.6929937\nMILLE LACS          1.2995480 -0.6929937\nPOPE                1.4116740 -0.6929937\nROCK                1.4170797 -0.6929937\nSTEVENS             1.5520593 -0.6929937\nYELLOW MEDICINE     1.3862294 -0.6929937\nBECKER              1.4792143 -0.6929937\nBIG STONE           1.4801817 -0.6929937\nDODGE               1.5840333 -0.6929937\nISANTI              1.3149878 -0.6929937\nKITTSON             1.5015319 -0.6929937\nNOBLES              1.6300755 -0.6929937\nNORMAN              1.3820836 -0.6929937\nPENNINGTON          1.3246513 -0.6929937\nRENVILLE            1.5338618 -0.6929937\nTODD                1.5530274 -0.6929937\nWATONWAN            1.9060483 -0.6929937\nAITKIN              1.1915003 -0.6929937\nBENTON              1.4461503 -0.6929937\nBROWN               1.6827736 -0.6929937\nCHIPPEWA            1.5771520 -0.6929937\nCLEARWATER          1.4024982 -0.6929937\nCOTTONWOOD          1.3723633 -0.6929937\nKANABEC             1.3646863 -0.6929937\nKANDIYOHI           1.7197951 -0.6929937\nLAKE OF THE WOODS   1.6303574 -0.6929937\nLINCOLN             1.8260565 -0.6929937\nNICOLLET            1.7641694 -0.6929937\nPIPESTONE           1.6303984 -0.6929937\nPOLK                1.5675867 -0.6929937\nSIBLEY              1.3673371 -0.6929937\nSWIFT               1.2574762 -0.6929937\nTRAVERSE            1.6938491 -0.6929937\nWASECA              1.0944377 -0.6929937\nCASS                1.4322449 -0.6929937\nHUBBARD             1.3467692 -0.6929937\nJACKSON             1.7329563 -0.6929937\nLE SUEUR            1.5979923 -0.6929937\nMEEKER              1.3416955 -0.6929937\nREDWOOD             1.7120493 -0.6929937\nWADENA              1.3708520 -0.6929937\nCARVER              1.5086099 -0.6929937\nCHISAGO             1.2370518 -0.6929937\nFARIBAULT           1.0211902 -0.6929937\nHOUSTON             1.6222663 -0.6929937\nPINE                1.0877738 -0.6929937\nBELTRAMI            1.5045012 -0.6929937\nKOOCHICHING         1.0870316 -0.6929937\nMARTIN              1.2199767 -0.6929937\nWABASHA             1.6642923 -0.6929937\nLYON                1.7636308 -0.6929937\nOTTER TAIL          1.5494611 -0.6929937\nSHERBURNE           1.2380854 -0.6929937\nDOUGLAS             1.6311136 -0.6929937\nFREEBORN            1.8605721 -0.6929937\nLAKE                0.7928241 -0.6929937\nMARSHALL            1.5404841 -0.6929937\nMORRISON            1.2623707 -0.6929937\nCARLTON             1.1600746 -0.6929937\nSTEELE              1.5389227 -0.6929937\nITASCA              1.0999775 -0.6929937\nRICE                1.7205672 -0.6929937\nCROW WING           1.2209415 -0.6929937\nMCLEOD              1.3375197 -0.6929937\nMOWER               1.6294468 -0.6929937\nSCOTT               1.6981946 -0.6929937\nWINONA              1.5716875 -0.6929937\nWRIGHT              1.5906331 -0.6929937\nBLUE EARTH          1.8581255 -0.6929937\nCLAY                1.8380232 -0.6929937\nGOODHUE             1.8135585 -0.6929937\nROSEAU              1.5982671 -0.6929937\nOLMSTED             1.3328317 -0.6929937\nSTEARNS             1.4829168 -0.6929937\nRAMSEY              1.1995431 -0.6929937\nWASHINGTON          1.3404792 -0.6929937\nANOKA               0.9276468 -0.6929937\nDAKOTA              1.3462611 -0.6929937\nHENNEPIN            1.3626875 -0.6929937\nST LOUIS            0.8899487 -0.6929937\n\nattr(,\"class\")\n[1] \"coef.mer\"\n\n\nEfectos fijos y efectos aleatorios\n\nfixef (M1)\n\n(Intercept)       floor \n  1.4615979  -0.6929937 \n\nranef (M1)\n\n$county_name\n                  (Intercept)\nMAHNOMEN          -0.01597291\nMURRAY             0.16376021\nWILKIN             0.12198054\nCOOK              -0.21829873\nFILLMORE          -0.02065353\nLAC QUI PARLE      0.40649210\nMILLE LACS        -0.16204985\nPOPE              -0.04992386\nROCK              -0.04451817\nSTEVENS            0.09046142\nYELLOW MEDICINE   -0.07536847\nBECKER             0.01761646\nBIG STONE          0.01858386\nDODGE              0.12243538\nISANTI            -0.14661004\nKITTSON            0.03993398\nNOBLES             0.16847766\nNORMAN            -0.07951425\nPENNINGTON        -0.13694658\nRENVILLE           0.07226396\nTODD               0.09142954\nWATONWAN           0.44445038\nAITKIN            -0.27009754\nBENTON            -0.01544759\nBROWN              0.22117574\nCHIPPEWA           0.11555414\nCLEARWATER        -0.05909971\nCOTTONWOOD        -0.08923457\nKANABEC           -0.09691161\nKANDIYOHI          0.25819719\nLAKE OF THE WOODS  0.16875955\nLINCOLN            0.36445858\nNICOLLET           0.30257150\nPIPESTONE          0.16880053\nPOLK               0.10598885\nSIBLEY            -0.09426078\nSWIFT             -0.20412165\nTRAVERSE           0.23225117\nWASECA            -0.36716018\nCASS              -0.02935303\nHUBBARD           -0.11482868\nJACKSON            0.27135840\nLE SUEUR           0.13639437\nMEEKER            -0.11990237\nREDWOOD            0.25045139\nWADENA            -0.09074584\nCARVER             0.04701207\nCHISAGO           -0.22454609\nFARIBAULT         -0.44040766\nHOUSTON            0.16066847\nPINE              -0.37382404\nBELTRAMI           0.04290332\nKOOCHICHING       -0.37456633\nMARTIN            -0.24162116\nWABASHA            0.20269438\nLYON               0.30203295\nOTTER TAIL         0.08786325\nSHERBURNE         -0.22351246\nDOUGLAS            0.16951573\nFREEBORN           0.39897423\nLAKE              -0.66877374\nMARSHALL           0.07888624\nMORRISON          -0.19922714\nCARLTON           -0.30152324\nSTEELE             0.07732481\nITASCA            -0.36162041\nRICE               0.25896936\nCROW WING         -0.24065636\nMCLEOD            -0.12407820\nMOWER              0.16784894\nSCOTT              0.23659675\nWINONA             0.11008962\nWRIGHT             0.12903525\nBLUE EARTH         0.39652763\nCLAY               0.37642531\nGOODHUE            0.35196061\nROSEAU             0.13666919\nOLMSTED           -0.12876623\nSTEARNS            0.02131895\nRAMSEY            -0.26205481\nWASHINGTON        -0.12111868\nANOKA             -0.53395109\nDAKOTA            -0.11533677\nHENNEPIN          -0.09891043\nST LOUIS          -0.57164916\n\nwith conditional variances for \"county_name\" \n\n\nIncertidumbres de los coeficientes estimados\n\nse.fixef (M1)\n\n(Intercept)       floor \n 0.05157623  0.07043081 \n\nse.ranef (M1)\n\n$county_name\n                  (Intercept)\nMAHNOMEN           0.30104585\nMURRAY             0.30104585\nWILKIN             0.30104585\nCOOK               0.27966565\nFILLMORE           0.27966565\nLAC QUI PARLE      0.27966565\nMILLE LACS         0.27966565\nPOPE               0.27966565\nROCK               0.27966565\nSTEVENS            0.27966565\nYELLOW MEDICINE    0.27966565\nBECKER             0.26227671\nBIG STONE          0.26227671\nDODGE              0.26227671\nISANTI             0.26227671\nKITTSON            0.26227671\nNOBLES             0.26227671\nNORMAN             0.26227671\nPENNINGTON         0.26227671\nRENVILLE           0.26227671\nTODD               0.26227671\nWATONWAN           0.26227671\nAITKIN             0.24777409\nBENTON             0.24777409\nBROWN              0.24777409\nCHIPPEWA           0.24777409\nCLEARWATER         0.24777409\nCOTTONWOOD         0.24777409\nKANABEC            0.24777409\nKANDIYOHI          0.24777409\nLAKE OF THE WOODS  0.24777409\nLINCOLN            0.24777409\nNICOLLET           0.24777409\nPIPESTONE          0.24777409\nPOLK               0.24777409\nSIBLEY             0.24777409\nSWIFT              0.24777409\nTRAVERSE           0.24777409\nWASECA             0.24777409\nCASS               0.23543858\nHUBBARD            0.23543858\nJACKSON            0.23543858\nLE SUEUR           0.23543858\nMEEKER             0.23543858\nREDWOOD            0.23543858\nWADENA             0.23543858\nCARVER             0.22477918\nCHISAGO            0.22477918\nFARIBAULT          0.22477918\nHOUSTON            0.22477918\nPINE               0.22477918\nBELTRAMI           0.21544775\nKOOCHICHING        0.21544775\nMARTIN             0.21544775\nWABASHA            0.21544775\nLYON               0.20718964\nOTTER TAIL         0.20718964\nSHERBURNE          0.20718964\nDOUGLAS            0.19981371\nFREEBORN           0.19981371\nLAKE               0.19981371\nMARSHALL           0.19981371\nMORRISON           0.19981371\nCARLTON            0.19317329\nSTEELE             0.19317329\nITASCA             0.18715376\nRICE               0.18715376\nCROW WING          0.18166402\nMCLEOD             0.17663066\nMOWER              0.17663066\nSCOTT              0.17663066\nWINONA             0.17663066\nWRIGHT             0.17663066\nBLUE EARTH         0.17199375\nCLAY               0.17199375\nGOODHUE            0.17199375\nROSEAU             0.17199375\nOLMSTED            0.14203531\nSTEARNS            0.13726758\nRAMSEY             0.12371837\nWASHINGTON         0.10549434\nANOKA              0.09981833\nDAKOTA             0.09142752\nHENNEPIN           0.07194472\nST LOUIS           0.06860507\n\nse_random &lt;- se.ranef (M1)\n\nIncertidumbre de los coeficientes por condado vs tamaño de muestra:\n\ntabla_se_random &lt;- data.frame(county_name = rownames(se_random$county),\n                              se = as.numeric(se_random$county))\n\n\ntabla_se &lt;- radon_data %&gt;% group_by(county_name) %&gt;% summarise(n = n()) %&gt;% \n  left_join(tabla_se_random, by = \"county_name\") \n\n  ggplot(mapping = aes(x = n, y = se),data = tabla_se) +\n  geom_point()\n\n\n\n\n\n\n\n\nIntervalos de confianza para los coeficientes fijos:\n\nfixef(M1)[1]+c(-1,1)*qnorm(0.975)*se.fixef(M1)[1]\n\n[1] 1.360510 1.562685\n\nfixef(M1)[2]+c(-1,1)*qnorm(0.975)*se.fixef(M1)[2]\n\n[1] -0.8310356 -0.5549519\n\n\nIntervalos de confianza para los coeficientes por condado. Intercepto total:\n\ncoef(M1)$county[26,1]+c(-1,1)*qnorm(0.975)*se.ranef(M1)$county[26]\n\n[1] 1.091524 2.062780\n\n\nSolo efecto aleatorio sobre intercepto fijo\n\nas.matrix(ranef(M1)$county)[26]+c(-1,1)*qnorm(0.975)*se.ranef(M1)$county[26]\n\n[1] -0.3700742  0.6011824",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Modelos Lineales Multinivel básicos</span>"
    ]
  },
  {
    "objectID": "MLMbasicos.html#modelo-multinivel-con-predictor-por-grupo",
    "href": "MLMbasicos.html#modelo-multinivel-con-predictor-por-grupo",
    "title": "2  Modelos Lineales Multinivel básicos",
    "section": "2.3 Modelo multinivel con predictor por grupo",
    "text": "2.3 Modelo multinivel con predictor por grupo\nPreparación de datos:\n\ncty &lt;- read_delim('./data/ARM_Data/radon/cty.dat',trim_ws = TRUE)\n\nRows: 3194 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): stfips, ctfips, st, cty\ndbl (3): lon, lat, Uppm\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nradon_data &lt;- radon_data %&gt;% mutate(fips = stfips * 1000 + cntyfips)\n\n# Obtener el FIPS a nivel de EE.UU.\nusa.fips &lt;- 1000 * as.numeric(cty$stfips) + as.numeric(cty$ctfips)\n\n# Encontrar las filas correspondientes a los condados únicos en Minnesota\nusa.rows &lt;- match(unique(radon_data$fips), usa.fips)\n\nuranium &lt;- cty[usa.rows, \"Uppm\"]\nu &lt;- log(uranium)\n\ncounty_u_data &lt;- data.frame(\n  county_name = unique(radon_data$county_name),\n  u = u\n)\n\nradon_data &lt;- radon_data %&gt;%\n  left_join(county_u_data, by = \"county_name\") %&gt;% \n  rename(u = Uppm)\n\nModelo con intercepto variable por condado y piso y Uranio\n\nM2 &lt;- lmer (log_radon ~ floor + u + (1 | county_name),data = radon_data)\ndisplay (M2)\n\nlmer(formula = log_radon ~ floor + u + (1 | county_name), data = radon_data)\n            coef.est coef.se\n(Intercept)  1.47     0.04  \nfloor       -0.67     0.07  \nu            0.72     0.09  \n\nError terms:\n Groups      Name        Std.Dev.\n county_name (Intercept) 0.16    \n Residual                0.76    \n---\nnumber of obs: 919, groups: county_name, 85\nAIC = 2144.2, DIC = 2111.4\ndeviance = 2122.8 \n\n\nResultados:\n\n#coef(M2)\n#fixef(M2)\n#ranef(M2)\n\nRelación coeficientes aleatorios por condado vs uranio:\n\n# Summarize the data\nu &lt;- radon_data %&gt;%\n  group_by(county_name) %&gt;%\n  summarise(u = mean(u))\n\n# Calculate model coefficients\na.hat.M2 &lt;- fixef(M2)[1] + fixef(M2)[3] * u$u + ranef(M2)$county\nb.hat.M2 &lt;- fixef(M2)[2]\n\n# Standard error (assuming se.coef function calculates this)\na.se.M2 &lt;- se.coef(M2)$county\n\n# Prepare data for plotting\nplot_data &lt;- data.frame(\n  u = u$u,\n  a_hat = a.hat.M2,\n  se = a.se.M2\n) \ncolnames(plot_data) &lt;- c(\"u\", \"a_hat\", \"se\")\n\n# Create the plot\nggplot(plot_data, aes(x = u, y = a_hat)) +\n  geom_point(size = 3) +\n  geom_smooth(method = \"lm\", formula = y ~ x, se = FALSE, color = \"black\") +\n  labs(x = \"County-level uranium measure\", y = \"Estimated regression intercept\") +\n  theme_minimal() +\n  scale_x_continuous(breaks = seq(-1, 1, 0.5)) +\n  scale_y_continuous(limits = c(0.5, 2.0)) +\n  theme(\n    axis.title = element_text(size = 14),\n    axis.text = element_text(size = 12)\n  )",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Modelos Lineales Multinivel básicos</span>"
    ]
  },
  {
    "objectID": "MLMbasicos.html#predicción-de-un-modelo-multinivel",
    "href": "MLMbasicos.html#predicción-de-un-modelo-multinivel",
    "title": "2  Modelos Lineales Multinivel básicos",
    "section": "2.4 Predicción de un modelo multinivel",
    "text": "2.4 Predicción de un modelo multinivel\n\nn.sims &lt;- 1000\n\nx.tilde &lt;- 1\nsigma.y.hat &lt;- sigma.hat(M2)$sigma$data\ncoef.hat &lt;- as.matrix(coef(M2)$county)[26, ]\nu_value &lt;- county_u_data[26,2]\n\ny.tilde &lt;- rnorm(1, sum(coef.hat * c(1, x.tilde, u_value)), sigma.y.hat)\ny.tilde &lt;- rnorm(n.sims, sum(coef.hat * c(1, x.tilde, u_value)), sigma.y.hat)\n\nmean_y_tilde &lt;- mean(y.tilde)\nquantiles_y_tilde &lt;- quantile(y.tilde, probs = c(0.25, 0.5, 0.75))\n\nunlogged &lt;- exp(y.tilde)\nmean_unlogged &lt;- mean(unlogged)\nquantiles_unlogged &lt;- quantile(unlogged, probs = c(0.25, 0.5, 0.75))\n\nu.tilde &lt;- mean(county_u_data[,2])\ng.0.hat &lt;- fixef(M2)[\"(Intercept)\"]\ng.1.hat &lt;- fixef(M2)[\"u\"]\nsigma.a.hat &lt;- sigma.hat(M2)$sigma$county\nb.hat &lt;- b.hat.M2\n\na.tilde &lt;- rnorm(n.sims, g.0.hat + g.1.hat * u.tilde, sigma.a.hat)\ny.tilde &lt;- rnorm(n.sims, a.tilde + b.hat * x.tilde, sigma.y.hat)\n\nquantiles_y_tilde &lt;- quantile(y.tilde, probs = c(0.25, 0.5, 0.75),na.rm = T)\nexp_quantiles_y_tilde &lt;- exp(quantiles_y_tilde)\n\n# Nonlinear predictions\ny.tilde.basement &lt;- rnorm(n.sims, a.hat.M2[26, ], sigma.y.hat)\ny.tilde.nobasement &lt;- rnorm(n.sims, a.hat.M2[26, ] + b.hat.M2, sigma.y.hat)\ny.tilde &lt;- 0.9 * y.tilde.basement + 0.1 * y.tilde.nobasement\n\nmean_radon_basement &lt;- mean(exp(y.tilde.basement))\nmean_radon_nobasement &lt;- mean(exp(y.tilde.nobasement))\nmean_radon &lt;- 0.9 * mean_radon_basement + 0.1 * mean_radon_basement\n\nprint(mean_radon_basement)\n\n[1] 6.964798\n\nprint(mean_radon_nobasement)\n\n[1] 3.693868\n\nprint(mean_radon)\n\n[1] 6.964798",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Modelos Lineales Multinivel básicos</span>"
    ]
  },
  {
    "objectID": "MLMavanzados.html",
    "href": "MLMavanzados.html",
    "title": "3  Modelos Lineales Multinivel avanzados",
    "section": "",
    "text": "3.1 Modelos multinivel no-anidados",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Modelos Lineales Multinivel avanzados</span>"
    ]
  },
  {
    "objectID": "MLMavanzados.html#modelos-multinivel-no-anidados",
    "href": "MLMavanzados.html#modelos-multinivel-no-anidados",
    "title": "3  Modelos Lineales Multinivel avanzados",
    "section": "",
    "text": "3.1.1 Ejemplo 1: Pilotos\nCarga de paquetes necesarios:\n\nlibrary(tidyverse)\nlibrary(arm)\nlibrary(readr)  \n\nCarga de datos:\n\npilots &lt;- read_delim('./data/ARM_Data/pilots/pilots.dat')\n\npilots &lt;- pilots %&gt;% mutate(group = as.factor(group), \n                            scenario = as.factor(scenario),\n                            recovered = ifelse(is.na(recovered),NA,as.numeric(recovered)))\n\nDepuración de datos:\n\nresult &lt;- pilots %&gt;%\n  group_by(group, scenario) %&gt;%\n  summarize(\n    successes = sum(recovered == 1, na.rm = TRUE),\n    failures = sum(recovered == 0, na.rm = TRUE)\n  ) %&gt;%\n  ungroup() %&gt;%\n  mutate(\n    y = successes / (successes + failures)\n  )\n\nresult &lt;- result %&gt;%\n  distinct(group, scenario, .keep_all = TRUE)\n\nCambio a formato ancho y ordenamiento de datos:\n\ny_mat &lt;- result %&gt;%\n  pivot_wider(names_from = group, values_from = y, values_fill = 0, id_cols = scenario) %&gt;%\n  column_to_rownames(\"scenario\")\n\n\nsort_group &lt;- order(apply(y_mat, 2, mean, na.rm = TRUE))\nsort_scenario &lt;- order(apply(y_mat, 1, mean, na.rm = TRUE))\n\n\ny_mat_new &lt;- y_mat[sort_scenario, sort_group]\n\nresult &lt;- result %&gt;%\n  mutate(\n    group_id_new = factor(group, levels = colnames(y_mat)[sort_group]),\n    scenario_id_new = factor(scenario, levels = rownames(y_mat)[sort_scenario])\n  )\n\nHeatmap de tasa de exito por grupo y escenario:\n\nggplot(result, aes(x = group_id_new, y = scenario_id_new, fill = y)) +\n  geom_tile(color = \"white\") +\n  scale_fill_gradient(low = \"blue\", high = \"red\", name = \"Success Rate\") +\n  labs(\n    title = \"Success Rate by Group and Scenario\",\n    x = \"Group\",\n    y = \"Scenario\"\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    axis.text.y = element_text(angle = 45, vjust = 1)\n  )\n\n\n\n\n\n\n\n\nAjuste de modelo multinivel usando grupos y escenarios:\n\nM1 &lt;- lmer (y ~ 1 + (1 | group) + (1 | scenario),data = result)\n\nboundary (singular) fit: see help('isSingular')\n\ndisplay (M1)\n\nlmer(formula = y ~ 1 + (1 | group) + (1 | scenario), data = result)\ncoef.est  coef.se \n    0.44     0.12 \n\nError terms:\n Groups   Name        Std.Dev.\n scenario (Intercept) 0.32    \n group    (Intercept) 0.00    \n Residual             0.22    \n---\nnumber of obs: 40, groups: scenario, 8; group, 5\nAIC = 20.3, DIC = 7.3\ndeviance = 9.8 \n\n\nAjuste con paquete nlme:\n\nM1_nlme &lt;- nlme::lme(y ~ 1, random = ~ 1 | group / scenario, data = result)\nSS &lt;- summary(M1_nlme)\nSS\n\nLinear mixed-effects model fit by REML\n  Data: result \n       AIC      BIC    logLik\n  45.53959 52.19384 -18.76979\n\nRandom effects:\n Formula: ~1 | group\n         (Intercept)\nStdDev: 7.146626e-06\n\n Formula: ~1 | scenario %in% group\n        (Intercept)    Residual\nStdDev:   0.3734507 0.001986792\n\nFixed effects:  y ~ 1 \n                Value  Std.Error DF  t-value p-value\n(Intercept) 0.4418155 0.05904858 35 7.482237       0\n\nStandardized Within-Group Residuals:\n         Min           Q1          Med           Q3          Max \n-0.006293823 -0.004513152 -0.001248589  0.005916490  0.007951542 \n\nNumber of Observations: 40\nNumber of Groups: \n              group scenario %in% group \n                  5                  40 \n\n\n\n\n3.1.2 Ejemplo 2: Ganancias vs altura\nCarga de datos:\n\nlibrary(haven)\nheights &lt;- read_dta(\"data/ARM_Data/earnings/heights.dta\")\n\nDepuracion de datos\n\nheights &lt;- heights %&gt;%\n  mutate(\n    age = 90 - yearbn,\n    age = ifelse(age &lt; 18, NA, age),\n    age_category = case_when(\n      age &lt; 35 ~ 1,\n      age &lt; 50 ~ 2,\n      TRUE ~ 3\n    ),\n    eth = case_when(\n      race == 2 ~ 1,\n      hisp == 1 ~ 2,\n      race == 1 ~ 3,\n      TRUE ~ 4\n    ),\n    male = 2 - sex\n  )\n\nheights_clean &lt;- heights %&gt;%\n  filter(!is.na(earn) & !is.na(height) & !is.na(sex) & earn &gt; 0 & yearbn &gt; 25) %&gt;%\n  dplyr::select(earn, height, sex, race, hisp, ed, age, age_category, eth, male)\n\nAlgunas correcciones posteriores y variables adicionales:\n\nheights_clean &lt;- heights_clean %&gt;%\n  mutate(height_jitter_add = runif(n(), -.2, .2))\n\nheights_clean &lt;- heights_clean %&gt;%\n  mutate(\n    y = log(earn),\n    x = height\n  )\n\ny &lt;- heights_clean$y\nx &lt;- heights_clean$x\nage &lt;- heights_clean$age_category\n\nn &lt;- nrow(heights_clean)\nn_age &lt;- 3\nn_eth &lt;- 4\n\nAjuste log-ingresos vs altura por etnia (Modelo anidado):\n\nM1 &lt;- lmer (y ~ x + (1 + x | eth),data = heights_clean)\n\nboundary (singular) fit: see help('isSingular')\n\ndisplay (M1)\n\nlmer(formula = y ~ x + (1 + x | eth), data = heights_clean)\n            coef.est coef.se\n(Intercept) 7.27     1.10   \nx           0.04     0.02   \n\nError terms:\n Groups   Name        Std.Dev. Corr  \n eth      (Intercept) 1.55           \n          x           0.02     -1.00 \n Residual             0.90           \n---\nnumber of obs: 1062, groups: eth, 4\nAIC = 2823.3, DIC = 2788.6\ndeviance = 2800.0 \n\n\nAjuste del modelo mixto usando nlme con interceptos y pendientes aleatorios:\n\nM1_nlme &lt;- nlme::lme(\n  fixed = y ~ x, \n  random = ~ x | eth, \n  data = heights_clean\n)\nsummary(M1_nlme)\n\nLinear mixed-effects model fit by REML\n  Data: heights_clean \n       AIC      BIC    logLik\n  2823.787 2853.583 -1405.893\n\nRandom effects:\n Formula: ~x | eth\n Structure: General positive-definite, Log-Cholesky parametrization\n            StdDev     Corr  \n(Intercept) 1.77599145 (Intr)\nx           0.02742268 -1    \nResidual    0.90300309       \n\nFixed effects:  y ~ x \n               Value Std.Error   DF  t-value p-value\n(Intercept) 7.380834 1.2082771 1057 6.108560  0.0000\nx           0.034270 0.0185317 1057 1.849284  0.0647\n Correlation: \n  (Intr)\nx -0.999\n\nStandardized Within-Group Residuals:\n       Min         Q1        Med         Q3        Max \n-4.9284272 -0.4286750  0.1752600  0.6456474  2.6066249 \n\nNumber of Observations: 1062\nNumber of Groups: 4 \n\n\nCorrección para reducir correlación:\n\nx.centered &lt;- x - mean(x)\n\nM2 &lt;- lmer (y ~ x.centered + (1 + x.centered | eth),data = heights_clean)\n\nboundary (singular) fit: see help('isSingular')\n\ndisplay (M2)\n\nlmer(formula = y ~ x.centered + (1 + x.centered | eth), data = heights_clean)\n            coef.est coef.se\n(Intercept) 9.68     0.05   \nx.centered  0.03     0.02   \n\nError terms:\n Groups   Name        Std.Dev. Corr \n eth      (Intercept) 0.07          \n          x.centered  0.03     1.00 \n Residual             0.90          \n---\nnumber of obs: 1062, groups: eth, 4\nAIC = 2823.3, DIC = 2788.6\ndeviance = 2800.0 \n\n\nAjuste de un modelo mixto con nlme (comentado porque da error):\n\n#M2_nlme &lt;- nlme::lme(\n#  fixed = y ~ x.centered, \n#  random = ~ x.centered | eth, \n#  data = heights_clean\n#)\n\nInclusión de la categoría de edad:\n\nM3 &lt;- lmer (y ~ x.centered + (1 + x.centered | eth) + (1 + x.centered | age) +  \n              (1 + x.centered | eth:age),data = heights_clean)\n\nboundary (singular) fit: see help('isSingular')\n\ndisplay (M3)\n\nlmer(formula = y ~ x.centered + (1 + x.centered | eth) + (1 + \n    x.centered | age) + (1 + x.centered | eth:age), data = heights_clean)\n            coef.est coef.se\n(Intercept) 9.69     0.07   \nx.centered  0.05     0.02   \n\nError terms:\n Groups   Name        Std.Dev. Corr  \n eth:age  (Intercept) 0.00           \n          x.centered  0.00     -0.90 \n age      (Intercept) 0.42           \n          x.centered  0.02     0.76  \n eth      (Intercept) 0.04           \n          x.centered  0.02     1.00  \n Residual             0.81           \n---\nnumber of obs: 1059, groups: eth:age, 136; age, 47; eth, 4\nAIC = 2697.1, DIC = 2652.6\ndeviance = 2662.9 \n\n\nAjuste del modelo con nlme (con error):\n\n#M3_nlme &lt;- nlme::lme(\n#  fixed = y ~ x.centered, \n#  random = ~ x.centered | eth + age + eth:age, \n#  data = heights_clean\n#)\n\nModelo reducido sin interacción (también da error):\n\n#M4_nlme &lt;- nlme::lme(\n#  fixed = y ~ x, \n#  random = ~ x | eth + age + eth:age, \n#  data = heights_clean\n#)\n\n\n\n3.1.3 Tarea 1\nCarga de datos\n\nlibrary(ggplot2)\nlibrary(readr)\n\ncd4_data &lt;- read_csv(\"data/ARM_Data/cd4/allvar.csv\")\n\nDepuración de datos:\n\ncd4_data$VDATE &lt;- as.Date(cd4_data$VDATE, format=\"%m/%d/%Y\")\ncd4_data_filtered &lt;- na.omit(cd4_data[, c(\"newpid\", \"visage\", \"CD4PCT\", \"baseage\", \"treatmnt\")])\ncd4_data_filtered$time_since_baseage &lt;- cd4_data_filtered$visage - cd4_data_filtered$baseage\n\ncd4_data_filtered$sqrt_CD4PCT &lt;- sqrt(cd4_data_filtered$CD4PCT)\n\nGráfico del porcentaje transformado de CD4 como función del tiempo:\n\nggplot(cd4_data_filtered, aes(x=time_since_baseage, y=sqrt_CD4PCT, group=newpid, color=factor(newpid))) +\n  geom_line() +\n  geom_point() +\n  labs(x = \"Time since Base Age (Years)\", y = \"Square Root of CD4 Percentage\", \n       title = \"Square Root of CD4 Percentage over Time for Each Child\") +\n  theme_minimal() +\n  theme(legend.position = \"none\")\n\n\n\n\n\n\n\n\nAjuste de un modelo lineal para cada niño, usando solamente aquellos niños con más de dos visitas:\n\ncd4_data_filtered &lt;- cd4_data_filtered %&gt;%\n  group_by(newpid) %&gt;%\n  filter(n() &gt; 2) %&gt;%\n  ungroup()\n\nlinear_models &lt;- cd4_data_filtered %&gt;%\n  group_by(newpid) %&gt;%\n  do(model = lm(sqrt_CD4PCT ~ time_since_baseage, data = .))\n\ncd4_fits &lt;- linear_models %&gt;%\n  rowwise() %&gt;%\n  do(data.frame(newpid = .$newpid, time_since_baseage = cd4_data_filtered$time_since_baseage, \n                pred = predict(.$model, newdata = cd4_data_filtered)))\n\ncd4_fits &lt;- left_join(cd4_fits, cd4_data_filtered, by = c(\"newpid\", \"time_since_baseage\"))\n\nGráfico de los ajustes lineales para una muestra de 30 niños:\n\nset.seed(123)\nsampled_children &lt;- cd4_data_filtered %&gt;%\n  distinct(newpid) %&gt;%\n  sample_n(30) %&gt;%\n  pull(newpid)\n\ncd4_data_sampled &lt;- cd4_fits %&gt;%\n  filter(newpid %in% sampled_children)\n\nggplot(cd4_data_sampled, aes(x=time_since_baseage, y=sqrt_CD4PCT)) +\n  geom_point(aes(y=sqrt_CD4PCT), alpha=0.6) +  # Original data points\n  geom_line(aes(y=pred), size=1, color=\"blue\") +  # Linear fits\n  facet_wrap(~newpid, scales = \"free_y\") +    # Facet by patient ID\n  labs(x = \"Tiempo desde edad base\", y = \"Raíz de CD4 (%)\", \n       title = \"\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\nAjuste de un modelo con interceptos y pendientes como función de el tratamiento y la edad base, a través de un procedimiento de dos pasos. Paso 1:\n\nchild_models &lt;- cd4_data_filtered %&gt;%\n  group_by(newpid) %&gt;%\n  summarize(\n    intercept = coef(lm(sqrt(CD4PCT) ~ time_since_baseage))[1],  # Intercept\n    slope = coef(lm(sqrt(CD4PCT) ~ time_since_baseage))[2]       # Slope\n  )\n\nMerge de los datos de los modelos con los datos originales:\n\nchild_models &lt;- child_models %&gt;%\n  left_join(cd4_data_filtered %&gt;% distinct(newpid, treatmnt, baseage), by = \"newpid\")\n\nPaso 2:\n\nintercept_model &lt;- lm(intercept ~ treatmnt + baseage, data = child_models)\nslope_model &lt;- lm(slope ~ treatmnt + baseage, data = child_models)\n\nsummary(intercept_model)\n\n\nCall:\nlm(formula = intercept ~ treatmnt + baseage, data = child_models)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-3.9042 -0.6859  0.1141  1.0212  2.7661 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)  4.76860    0.35152   13.57   &lt;2e-16 ***\ntreatmnt     0.37018    0.20007    1.85   0.0659 .  \nbaseage     -0.11327    0.04442   -2.55   0.0116 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.362 on 184 degrees of freedom\nMultiple R-squared:  0.0532,    Adjusted R-squared:  0.0429 \nF-statistic: 5.169 on 2 and 184 DF,  p-value: 0.006546\n\nsummary(slope_model)\n\n\nCall:\nlm(formula = slope ~ treatmnt + baseage, data = child_models)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-4.9019 -0.4392  0.0026  0.4896  6.0402 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)\n(Intercept) -0.40791    0.29048  -1.404    0.162\ntreatmnt     0.06036    0.16533   0.365    0.715\nbaseage      0.00881    0.03671   0.240    0.811\n\nResidual standard error: 1.126 on 184 degrees of freedom\nMultiple R-squared:  0.0009983, Adjusted R-squared:  -0.00986 \nF-statistic: 0.09193 on 2 and 184 DF,  p-value: 0.9122\n\n\nAjuste de un modelo mixto con intercepto aleatorio por niño:\n\ncd4_model &lt;- lmer(sqrt_CD4PCT ~ time_since_baseage + (1 | newpid), data = cd4_data_filtered)\n\nsummary(cd4_model)\n\nLinear mixed model fit by REML ['lmerMod']\nFormula: sqrt_CD4PCT ~ time_since_baseage + (1 | newpid)\n   Data: cd4_data_filtered\n\nREML criterion at convergence: 2762.4\n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-4.7884 -0.4721  0.0026  0.4547  5.0256 \n\nRandom effects:\n Groups   Name        Variance Std.Dev.\n newpid   (Intercept) 1.7498   1.3228  \n Residual             0.5865   0.7658  \nNumber of obs: 972, groups:  newpid, 187\n\nFixed effects:\n                   Estimate Std. Error t value\n(Intercept)         4.93400    0.10534  46.839\ntime_since_baseage -0.38491    0.05439  -7.077\n\nCorrelation of Fixed Effects:\n            (Intr)\ntim_snc_bsg -0.313\n\n\nAjuste del modelo extendido con covariables por niño:\n\ncd4_model_extended &lt;- lmer(sqrt_CD4PCT ~ time_since_baseage + treatmnt + baseage + \n                           (1 | newpid), data = cd4_data_filtered)\n\nsummary(cd4_model_extended)\n\nLinear mixed model fit by REML ['lmerMod']\nFormula: sqrt_CD4PCT ~ time_since_baseage + treatmnt + baseage + (1 |  \n    newpid)\n   Data: cd4_data_filtered\n\nREML criterion at convergence: 2757.9\n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-4.8101 -0.4699  0.0084  0.4432  5.0437 \n\nRandom effects:\n Groups   Name        Variance Std.Dev.\n newpid   (Intercept) 1.6680   1.2915  \n Residual             0.5864   0.7658  \nNumber of obs: 972, groups:  newpid, 187\n\nFixed effects:\n                   Estimate Std. Error t value\n(Intercept)         4.66797    0.34667  13.465\ntime_since_baseage -0.38378    0.05438  -7.058\ntreatmnt            0.42721    0.19649   2.174\nbaseage            -0.10143    0.04361  -2.326\n\nCorrelation of Fixed Effects:\n            (Intr) tm_sn_ trtmnt\ntim_snc_bsg -0.090              \ntreatmnt    -0.846 -0.001       \nbaseage     -0.478 -0.009  0.042\n\n\nExtrae la edad del niño en la última visita:\n\nlast_time &lt;- cd4_data_filtered %&gt;%\n  group_by(newpid) %&gt;%\n  summarize(last_visage = max(visage), baseage = first(baseage), treatmnt = first(treatmnt))\n\nCalcula la edad en la siguiente visita, asumiendo que esta se realiza un año después de la última visita:\n\nnext_time_data &lt;- last_time %&gt;%\n  mutate(\n    next_visage = last_visage + 1,  # Hypothetical next time point: 1 year later\n    time_since_baseage = next_visage - baseage  # Recalculate time since base age\n  )\n\nPredicción del CD4 un año después, usando predict (sin simular)\n\nnext_time_data$sqrt_predicted_CD4PCT &lt;- predict(cd4_model_extended, newdata = next_time_data, re.form = ~(1 | newpid))\n\nnext_time_data$predicted_CD4PCT &lt;- (next_time_data$sqrt_predicted_CD4PCT)^2\n\nPredicción de CD4 para un niño nuevo de 4 años, en incrementos de 1 año hasta los 10 años:\n\nnew_child_data &lt;- data.frame(\n  newpid = \"new_child\",  # Placeholder for new child ID\n  baseage = 4,           # Baseline age is 4 years\n  next_visage = seq(4, 10, by = 1),  # Time points: 4, 5, 6, ..., 10 years\n  treatmnt = 1           # Assume the child is receiving treatment (can change to 0 if no treatment)\n)\n\nnew_child_data$time_since_baseage = new_child_data$next_visage - new_child_data$baseage\n\nnew_child_data$sqrt_predicted_CD4PCT &lt;- predict(cd4_model_extended, newdata = new_child_data, re.form = NA)\n\nnew_child_data$predicted_CD4PCT &lt;- (new_child_data$sqrt_predicted_CD4PCT)^2\n\nnew_child_data %&gt;% dplyr::select(next_visage, predicted_CD4PCT)\n\n  next_visage predicted_CD4PCT\n1           4        21.991143\n2           5        18.538967\n3           6        15.381368\n4           7        12.518345\n5           8         9.949898\n6           9         7.676027\n7          10         5.696733",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Modelos Lineales Multinivel avanzados</span>"
    ]
  }
]