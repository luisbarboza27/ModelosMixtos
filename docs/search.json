[
  {
    "objectID": "introduccion.html",
    "href": "introduccion.html",
    "title": "1  Introducción",
    "section": "",
    "text": "Carga de paquetes:\n\nlibrary(tidyverse)\nlibrary(arm)\nlibrary(readr)\n\nEjemplo de datos con medidas repetidas:\nConjunto de datos longitudinal de unos 2000 adolescentes australianos cuyos patrones de consumo de tabaco se registraron cada seis meses (a través de un cuestionario) durante un período de tres años.\nCarga de datos:\n\nsmoking &lt;- read_delim('./data/ARM_Data/smoking/smoke_pub.dat') \n\nRows: 8730 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \"\\t\"\ndbl (5): newid, sex(1=F), parsmk, wave, smkreg\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nsmoking &lt;- smoking %&gt;% rename(sex = `sex(1=F)`) %&gt;%\n  mutate(sex = factor(sex))\n\nY graficamos la prevalencia en del fumado en cada una de las aplicaciones del cuestionario (wave) para cada uno de los sexos:\n\nprevalencia &lt;- smoking %&gt;%\n  group_by(sex,wave) %&gt;%\n  summarise(prevalencia = mean(smkreg)) \n\n`summarise()` has grouped output by 'sex'. You can override using the `.groups`\nargument.\n\nggplot()+geom_line(data=prevalencia,aes(x=wave,y=prevalencia,color = sex)\n                  )+theme_minimal()+labs(title = 'Prevalencia de fumado por sexo',\n                                          x = 'Aplicación del cuestionario',\n                                          y = 'Prevalencia de fumado')\n\n\n\n\n\n\n\n\nTambién podemos separar la información propia del nivel 1 (waves) y los de nivel más agrupado o nivel 2 (individuos):\n\nsmoking_ind &lt;- smoking %&gt;% \n  dplyr::select(wave,newid,smkreg) %&gt;%\n  arrange(wave,newid)\n\nhead(smoking_ind)\n\n# A tibble: 6 × 3\n   wave newid smkreg\n  &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;\n1     1     1      0\n2     1     2      0\n3     1     3      0\n4     1     4      0\n5     1     5      0\n6     1     6      0\n\n\n\nsmoking_group &lt;- smoking %&gt;% \n  dplyr::select(newid,sex,parsmk) %&gt;%\n  distinct()\n\nhead(smoking_group)\n\n# A tibble: 6 × 3\n  newid sex   parsmk\n  &lt;dbl&gt; &lt;fct&gt;  &lt;dbl&gt;\n1     1 1          0\n2     2 0          0\n3     3 1          0\n4     4 1          0\n5     5 0          0\n6     6 0          0",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introducción</span>"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Modelos Mixtos",
    "section": "",
    "text": "Prefacio\nNotas computacionales de clase para el curso SP1653, Modelos Mixtos.",
    "crumbs": [
      "Prefacio"
    ]
  },
  {
    "objectID": "MLMbasicos.html",
    "href": "MLMbasicos.html",
    "title": "2  Modelos Lineales Multinivel básicos",
    "section": "",
    "text": "2.1 Pooling completo vs no-pooling\nCarga de datos de radon y depuración:\nradon &lt;- read_delim('./data/ARM_Data/radon/srrs2.dat',trim_ws = TRUE)\n\nRows: 12777 Columns: 25\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (11): state, state2, zip, basement, rep, wave, starttm, stoptm, startdt,...\ndbl (13): idnum, stfips, region, typebldg, floor, room, stratum, activity, p...\nlgl  (1): windoor\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nradon_data &lt;- radon %&gt;%\n  filter(state == \"MN\") %&gt;%\n  mutate(\n    radon = activity,\n    log_radon = log(if_else(activity == 0, 0.1, activity)),\n    floor = floor,  # 0 for basement, 1 for first floor\n    county_name = as.vector(county)\n  ) %&gt;%\n  group_by(county_name) %&gt;%\n  mutate(\n    county = cur_group_id()\n  ) %&gt;%\n  ungroup()\nBoxplot de los niveles de radon por ciudad:\nmean_radon &lt;- mean(radon_data$log_radon, na.rm = TRUE)\n\nggplot(radon_data, aes(x = county_name, y = log_radon)) +\n  geom_boxplot() +\n  geom_abline(intercept = mean_radon, slope = 0, color = \"red\") +\n  labs(title = \"Boxplot of Log Radon Levels by City\",\n       x = \"City\",\n       y = \"Log Radon Level\") +\n  theme_minimal()\nBoxplot de los niveles de radon por ciudad ordenados por tamaño de muestra:\ntabla_ns &lt;- radon_data %&gt;% group_by(county_name) %&gt;% summarise(n = n())  \n\nradon_data &lt;- radon_data %&gt;% \n  left_join(tabla_ns, by = \"county_name\")\n\n\nradon_data &lt;- radon_data %&gt;%\n  mutate(county_name = factor(county_name, levels = tabla_ns$county_name[order(tabla_ns$n)]))\n\nggplot(radon_data, aes(x = county_name, y = log_radon)) +\n  geom_boxplot() +\n  geom_abline(intercept = mean_radon, slope = 0, color = \"red\") +\n  labs(title = \"Boxplot of Log Radon Levels by County (Sorted by Sample Size)\",\n       x = \"City\",\n       y = \"Log Radon Level\") +\n  theme_minimal()\nBoxplot de los niveles de radon por ciudad usando partial-pooling (Multinivel):\nlmer_radon &lt;- lmer(log_radon ~ 1 + (1|county_name), data = radon_data)\n\nradon_data &lt;- radon_data %&gt;% \n  mutate(log_radon_pred = predict(lmer_radon))\n\nggplot(radon_data, aes(x = county_name, y = log_radon_pred)) +\n  geom_boxplot() +\n  geom_abline(intercept = mean_radon, slope = 0, color = \"red\") +\n  labs(title = \"Boxplot of Log Radon Levels by City (Predicted)\",\n       x = \"City\",\n       y = \"Log Radon Level (Predicted)\") +\n  theme_minimal()\nPooling completo vs no-pooling con una covariable:\nmuestra_counties &lt;- c('LAC QUI PARLE', 'AITKIN','KOOCHICHING',\n                      'DOUGLAS','CLAY','STEARNS','RAMSEY','ST LOUIS')\n\nradon_data_r &lt;- radon_data %&gt;% mutate(county_s = as.character(county_name)) %&gt;%\n  filter(county_s %in% muestra_counties)\n\n\nregresion_pooling &lt;- lm(log_radon ~ floor, data = radon_data_r)\nregresion_no_pooling &lt;- lm(log_radon ~ -1+floor+county_name, data = radon_data_r)\n\n\ncoef_df &lt;- coef(regresion_no_pooling)\n\ncoef_data &lt;- data.frame(\n  county_s = sub(\"county\", \"\", names(coef_df)[grep(\"county\", names(coef_df))]),\n  slope = coef_df[grep(\"floor\", names(coef_df))],\n  intercept = coef_df[grep(\"county\", names(coef_df))]\n)\n\nWarning in data.frame(county_s = sub(\"county\", \"\",\nnames(coef_df)[grep(\"county\", : row names were found from a short variable and\nhave been discarded\n\nradon_data_r &lt;- radon_data_r %&gt;%\n  left_join(coef_data, by = \"county_s\")\n\nggplot(data = radon_data_r) +\n  geom_point(aes(x = floor, y = log_radon)) +\n  geom_abline(aes(intercept = intercept, slope = slope), color = \"blue\") +  # Specific regression lines for each county\n  geom_abline(intercept = coef(regresion_pooling)[1], slope = coef(regresion_pooling)[2], color = \"red\") +  # General regression line\n  facet_wrap(~county_s) +\n  labs(title = \"Radon Levels by Floor with Specific and General Regression Lines\",\n       x = \"Floor\",\n       y = \"Log Radon Level\") +\n  theme_minimal()\n\nWarning: Removed 209 rows containing missing values or values outside the scale range\n(`geom_abline()`).\nPooling parcial con una covariable (Multinivel):\nlmer_radon_floor &lt;- lmer(log_radon ~ floor + (1|county_name), \n                         data = radon_data_r)\n\n\nfixed_effect &lt;- fixef(lmer_radon_floor)\nrandom_effects &lt;- ranef(lmer_radon_floor)$county\n\n\ncoef_data_lmer &lt;- data.frame(\n  county_s = rownames(random_effects),\n  intercept_lmer = fixed_effect[1] + random_effects[, 1], \n  slope_lmer = fixed_effect[2]  \n)\n\nWarning in data.frame(county_s = rownames(random_effects), intercept_lmer =\nfixed_effect[1] + : row names were found from a short variable and have been\ndiscarded\n\nradon_data_r &lt;- radon_data_r %&gt;%\n  left_join(coef_data_lmer, by = \"county_s\")\n\nggplot(data = radon_data_r) +\n  geom_point(aes(x = floor, y = log_radon)) +\n  geom_abline(aes(intercept = intercept_lmer, slope = slope_lmer), color = \"blue\") +  # Specific regression lines for each county\n  geom_abline(intercept = fixed_effect[1], slope = fixed_effect[2], color = \"red\") +  # General regression line (fixed effects only)\n  facet_wrap(~county_s) +\n  labs(title = \"Radon Levels by Floor with Specific and General Regression Lines\",\n       x = \"Floor\",\n       y = \"Log Radon Level\") +\n  theme_minimal()",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Modelos Lineales Multinivel básicos</span>"
    ]
  },
  {
    "objectID": "MLMbasicos.html#modelo-multinivel-pooling-parcial",
    "href": "MLMbasicos.html#modelo-multinivel-pooling-parcial",
    "title": "2  Modelos Lineales Multinivel básicos",
    "section": "2.2 Modelo multinivel (pooling parcial)",
    "text": "2.2 Modelo multinivel (pooling parcial)\nModelo con intercepto variable por condado y piso\n\nM1 &lt;- lmer (log_radon ~ floor + (1 | county_name),data = radon_data)\ndisplay (M1)\n\nlmer(formula = log_radon ~ floor + (1 | county_name), data = radon_data)\n            coef.est coef.se\n(Intercept)  1.46     0.05  \nfloor       -0.69     0.07  \n\nError terms:\n Groups      Name        Std.Dev.\n county_name (Intercept) 0.33    \n Residual                0.76    \n---\nnumber of obs: 919, groups: county_name, 85\nAIC = 2179.3, DIC = 2156\ndeviance = 2163.7 \n\n\nCoeficientes estimados de regresion\n\ncoef (M1)\n\n$county_name\n                  (Intercept)      floor\nMAHNOMEN            1.4456250 -0.6929937\nMURRAY              1.6253581 -0.6929937\nWILKIN              1.5835784 -0.6929937\nCOOK                1.2432992 -0.6929937\nFILLMORE            1.4409443 -0.6929937\nLAC QUI PARLE       1.8680900 -0.6929937\nMILLE LACS          1.2995480 -0.6929937\nPOPE                1.4116740 -0.6929937\nROCK                1.4170797 -0.6929937\nSTEVENS             1.5520593 -0.6929937\nYELLOW MEDICINE     1.3862294 -0.6929937\nBECKER              1.4792143 -0.6929937\nBIG STONE           1.4801817 -0.6929937\nDODGE               1.5840333 -0.6929937\nISANTI              1.3149878 -0.6929937\nKITTSON             1.5015319 -0.6929937\nNOBLES              1.6300755 -0.6929937\nNORMAN              1.3820836 -0.6929937\nPENNINGTON          1.3246513 -0.6929937\nRENVILLE            1.5338618 -0.6929937\nTODD                1.5530274 -0.6929937\nWATONWAN            1.9060483 -0.6929937\nAITKIN              1.1915003 -0.6929937\nBENTON              1.4461503 -0.6929937\nBROWN               1.6827736 -0.6929937\nCHIPPEWA            1.5771520 -0.6929937\nCLEARWATER          1.4024982 -0.6929937\nCOTTONWOOD          1.3723633 -0.6929937\nKANABEC             1.3646863 -0.6929937\nKANDIYOHI           1.7197951 -0.6929937\nLAKE OF THE WOODS   1.6303574 -0.6929937\nLINCOLN             1.8260565 -0.6929937\nNICOLLET            1.7641694 -0.6929937\nPIPESTONE           1.6303984 -0.6929937\nPOLK                1.5675867 -0.6929937\nSIBLEY              1.3673371 -0.6929937\nSWIFT               1.2574762 -0.6929937\nTRAVERSE            1.6938491 -0.6929937\nWASECA              1.0944377 -0.6929937\nCASS                1.4322449 -0.6929937\nHUBBARD             1.3467692 -0.6929937\nJACKSON             1.7329563 -0.6929937\nLE SUEUR            1.5979923 -0.6929937\nMEEKER              1.3416955 -0.6929937\nREDWOOD             1.7120493 -0.6929937\nWADENA              1.3708520 -0.6929937\nCARVER              1.5086099 -0.6929937\nCHISAGO             1.2370518 -0.6929937\nFARIBAULT           1.0211902 -0.6929937\nHOUSTON             1.6222663 -0.6929937\nPINE                1.0877738 -0.6929937\nBELTRAMI            1.5045012 -0.6929937\nKOOCHICHING         1.0870316 -0.6929937\nMARTIN              1.2199767 -0.6929937\nWABASHA             1.6642923 -0.6929937\nLYON                1.7636308 -0.6929937\nOTTER TAIL          1.5494611 -0.6929937\nSHERBURNE           1.2380854 -0.6929937\nDOUGLAS             1.6311136 -0.6929937\nFREEBORN            1.8605721 -0.6929937\nLAKE                0.7928241 -0.6929937\nMARSHALL            1.5404841 -0.6929937\nMORRISON            1.2623707 -0.6929937\nCARLTON             1.1600746 -0.6929937\nSTEELE              1.5389227 -0.6929937\nITASCA              1.0999775 -0.6929937\nRICE                1.7205672 -0.6929937\nCROW WING           1.2209415 -0.6929937\nMCLEOD              1.3375197 -0.6929937\nMOWER               1.6294468 -0.6929937\nSCOTT               1.6981946 -0.6929937\nWINONA              1.5716875 -0.6929937\nWRIGHT              1.5906331 -0.6929937\nBLUE EARTH          1.8581255 -0.6929937\nCLAY                1.8380232 -0.6929937\nGOODHUE             1.8135585 -0.6929937\nROSEAU              1.5982671 -0.6929937\nOLMSTED             1.3328317 -0.6929937\nSTEARNS             1.4829168 -0.6929937\nRAMSEY              1.1995431 -0.6929937\nWASHINGTON          1.3404792 -0.6929937\nANOKA               0.9276468 -0.6929937\nDAKOTA              1.3462611 -0.6929937\nHENNEPIN            1.3626875 -0.6929937\nST LOUIS            0.8899487 -0.6929937\n\nattr(,\"class\")\n[1] \"coef.mer\"\n\n\nEfectos fijos y efectos aleatorios\n\nfixef (M1)\n\n(Intercept)       floor \n  1.4615979  -0.6929937 \n\nranef (M1)\n\n$county_name\n                  (Intercept)\nMAHNOMEN          -0.01597291\nMURRAY             0.16376021\nWILKIN             0.12198054\nCOOK              -0.21829873\nFILLMORE          -0.02065353\nLAC QUI PARLE      0.40649210\nMILLE LACS        -0.16204985\nPOPE              -0.04992386\nROCK              -0.04451817\nSTEVENS            0.09046142\nYELLOW MEDICINE   -0.07536847\nBECKER             0.01761646\nBIG STONE          0.01858386\nDODGE              0.12243538\nISANTI            -0.14661004\nKITTSON            0.03993398\nNOBLES             0.16847766\nNORMAN            -0.07951425\nPENNINGTON        -0.13694658\nRENVILLE           0.07226396\nTODD               0.09142954\nWATONWAN           0.44445038\nAITKIN            -0.27009754\nBENTON            -0.01544759\nBROWN              0.22117574\nCHIPPEWA           0.11555414\nCLEARWATER        -0.05909971\nCOTTONWOOD        -0.08923457\nKANABEC           -0.09691161\nKANDIYOHI          0.25819719\nLAKE OF THE WOODS  0.16875955\nLINCOLN            0.36445858\nNICOLLET           0.30257150\nPIPESTONE          0.16880053\nPOLK               0.10598885\nSIBLEY            -0.09426078\nSWIFT             -0.20412165\nTRAVERSE           0.23225117\nWASECA            -0.36716018\nCASS              -0.02935303\nHUBBARD           -0.11482868\nJACKSON            0.27135840\nLE SUEUR           0.13639437\nMEEKER            -0.11990237\nREDWOOD            0.25045139\nWADENA            -0.09074584\nCARVER             0.04701207\nCHISAGO           -0.22454609\nFARIBAULT         -0.44040766\nHOUSTON            0.16066847\nPINE              -0.37382404\nBELTRAMI           0.04290332\nKOOCHICHING       -0.37456633\nMARTIN            -0.24162116\nWABASHA            0.20269438\nLYON               0.30203295\nOTTER TAIL         0.08786325\nSHERBURNE         -0.22351246\nDOUGLAS            0.16951573\nFREEBORN           0.39897423\nLAKE              -0.66877374\nMARSHALL           0.07888624\nMORRISON          -0.19922714\nCARLTON           -0.30152324\nSTEELE             0.07732481\nITASCA            -0.36162041\nRICE               0.25896936\nCROW WING         -0.24065636\nMCLEOD            -0.12407820\nMOWER              0.16784894\nSCOTT              0.23659675\nWINONA             0.11008962\nWRIGHT             0.12903525\nBLUE EARTH         0.39652763\nCLAY               0.37642531\nGOODHUE            0.35196061\nROSEAU             0.13666919\nOLMSTED           -0.12876623\nSTEARNS            0.02131895\nRAMSEY            -0.26205481\nWASHINGTON        -0.12111868\nANOKA             -0.53395109\nDAKOTA            -0.11533677\nHENNEPIN          -0.09891043\nST LOUIS          -0.57164916\n\nwith conditional variances for \"county_name\" \n\n\nIncertidumbres de los coeficientes estimados\n\nse.fixef (M1)\n\n(Intercept)       floor \n 0.05157623  0.07043081 \n\nse.ranef (M1)\n\n$county_name\n                  (Intercept)\nMAHNOMEN           0.30104585\nMURRAY             0.30104585\nWILKIN             0.30104585\nCOOK               0.27966565\nFILLMORE           0.27966565\nLAC QUI PARLE      0.27966565\nMILLE LACS         0.27966565\nPOPE               0.27966565\nROCK               0.27966565\nSTEVENS            0.27966565\nYELLOW MEDICINE    0.27966565\nBECKER             0.26227671\nBIG STONE          0.26227671\nDODGE              0.26227671\nISANTI             0.26227671\nKITTSON            0.26227671\nNOBLES             0.26227671\nNORMAN             0.26227671\nPENNINGTON         0.26227671\nRENVILLE           0.26227671\nTODD               0.26227671\nWATONWAN           0.26227671\nAITKIN             0.24777409\nBENTON             0.24777409\nBROWN              0.24777409\nCHIPPEWA           0.24777409\nCLEARWATER         0.24777409\nCOTTONWOOD         0.24777409\nKANABEC            0.24777409\nKANDIYOHI          0.24777409\nLAKE OF THE WOODS  0.24777409\nLINCOLN            0.24777409\nNICOLLET           0.24777409\nPIPESTONE          0.24777409\nPOLK               0.24777409\nSIBLEY             0.24777409\nSWIFT              0.24777409\nTRAVERSE           0.24777409\nWASECA             0.24777409\nCASS               0.23543858\nHUBBARD            0.23543858\nJACKSON            0.23543858\nLE SUEUR           0.23543858\nMEEKER             0.23543858\nREDWOOD            0.23543858\nWADENA             0.23543858\nCARVER             0.22477918\nCHISAGO            0.22477918\nFARIBAULT          0.22477918\nHOUSTON            0.22477918\nPINE               0.22477918\nBELTRAMI           0.21544775\nKOOCHICHING        0.21544775\nMARTIN             0.21544775\nWABASHA            0.21544775\nLYON               0.20718964\nOTTER TAIL         0.20718964\nSHERBURNE          0.20718964\nDOUGLAS            0.19981371\nFREEBORN           0.19981371\nLAKE               0.19981371\nMARSHALL           0.19981371\nMORRISON           0.19981371\nCARLTON            0.19317329\nSTEELE             0.19317329\nITASCA             0.18715376\nRICE               0.18715376\nCROW WING          0.18166402\nMCLEOD             0.17663066\nMOWER              0.17663066\nSCOTT              0.17663066\nWINONA             0.17663066\nWRIGHT             0.17663066\nBLUE EARTH         0.17199375\nCLAY               0.17199375\nGOODHUE            0.17199375\nROSEAU             0.17199375\nOLMSTED            0.14203531\nSTEARNS            0.13726758\nRAMSEY             0.12371837\nWASHINGTON         0.10549434\nANOKA              0.09981833\nDAKOTA             0.09142752\nHENNEPIN           0.07194472\nST LOUIS           0.06860507\n\nse_random &lt;- se.ranef (M1)\n\nIncertidumbre de los coeficientes por condado vs tamaño de muestra:\n\ntabla_se_random &lt;- data.frame(county_name = rownames(se_random$county),\n                              se = as.numeric(se_random$county))\n\n\ntabla_se &lt;- radon_data %&gt;% group_by(county_name) %&gt;% summarise(n = n()) %&gt;% \n  left_join(tabla_se_random, by = \"county_name\") \n\n  ggplot(mapping = aes(x = n, y = se),data = tabla_se) +\n  geom_point()\n\n\n\n\n\n\n\n\nIntervalos de confianza para los coeficientes fijos:\n\nfixef(M1)[1]+c(-1,1)*qnorm(0.975)*se.fixef(M1)[1]\n\n[1] 1.360510 1.562685\n\nfixef(M1)[2]+c(-1,1)*qnorm(0.975)*se.fixef(M1)[2]\n\n[1] -0.8310356 -0.5549519\n\n\nIntervalos de confianza para los coeficientes por condado. Intercepto total:\n\ncoef(M1)$county[26,1]+c(-1,1)*qnorm(0.975)*se.ranef(M1)$county[26]\n\n[1] 1.091524 2.062780\n\n\nSolo efecto aleatorio sobre intercepto fijo\n\nas.matrix(ranef(M1)$county)[26]+c(-1,1)*qnorm(0.975)*se.ranef(M1)$county[26]\n\n[1] -0.3700742  0.6011824",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Modelos Lineales Multinivel básicos</span>"
    ]
  },
  {
    "objectID": "MLMbasicos.html#modelo-multinivel-con-predictor-por-grupo",
    "href": "MLMbasicos.html#modelo-multinivel-con-predictor-por-grupo",
    "title": "2  Modelos Lineales Multinivel básicos",
    "section": "2.3 Modelo multinivel con predictor por grupo",
    "text": "2.3 Modelo multinivel con predictor por grupo\nPreparación de datos:\n\ncty &lt;- read_delim('./data/ARM_Data/radon/cty.dat',trim_ws = TRUE)\n\nRows: 3194 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): stfips, ctfips, st, cty\ndbl (3): lon, lat, Uppm\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nradon_data &lt;- radon_data %&gt;% mutate(fips = stfips * 1000 + cntyfips)\n\n# Obtener el FIPS a nivel de EE.UU.\nusa.fips &lt;- 1000 * as.numeric(cty$stfips) + as.numeric(cty$ctfips)\n\n# Encontrar las filas correspondientes a los condados únicos en Minnesota\nusa.rows &lt;- match(unique(radon_data$fips), usa.fips)\n\nuranium &lt;- cty[usa.rows, \"Uppm\"]\nu &lt;- log(uranium)\n\ncounty_u_data &lt;- data.frame(\n  county_name = unique(radon_data$county_name),\n  u = u\n)\n\nradon_data &lt;- radon_data %&gt;%\n  left_join(county_u_data, by = \"county_name\") %&gt;% \n  rename(u = Uppm)\n\nModelo con intercepto variable por condado y piso y Uranio\n\nM2 &lt;- lmer (log_radon ~ floor + u + (1 | county_name),data = radon_data)\ndisplay (M2)\n\nlmer(formula = log_radon ~ floor + u + (1 | county_name), data = radon_data)\n            coef.est coef.se\n(Intercept)  1.47     0.04  \nfloor       -0.67     0.07  \nu            0.72     0.09  \n\nError terms:\n Groups      Name        Std.Dev.\n county_name (Intercept) 0.16    \n Residual                0.76    \n---\nnumber of obs: 919, groups: county_name, 85\nAIC = 2144.2, DIC = 2111.4\ndeviance = 2122.8 \n\n\nResultados:\n\n#coef(M2)\n#fixef(M2)\n#ranef(M2)\n\nRelación coeficientes aleatorios por condado vs uranio:\n\n# Summarize the data\nu &lt;- radon_data %&gt;%\n  group_by(county_name) %&gt;%\n  summarise(u = mean(u))\n\n# Calculate model coefficients\na.hat.M2 &lt;- fixef(M2)[1] + fixef(M2)[3] * u$u + ranef(M2)$county\nb.hat.M2 &lt;- fixef(M2)[2]\n\n# Standard error (assuming se.coef function calculates this)\na.se.M2 &lt;- se.coef(M2)$county\n\n# Prepare data for plotting\nplot_data &lt;- data.frame(\n  u = u$u,\n  a_hat = a.hat.M2,\n  se = a.se.M2\n) \ncolnames(plot_data) &lt;- c(\"u\", \"a_hat\", \"se\")\n\n# Create the plot\nggplot(plot_data, aes(x = u, y = a_hat)) +\n  geom_point(size = 3) +\n  geom_smooth(method = \"lm\", formula = y ~ x, se = FALSE, color = \"black\") +\n  labs(x = \"County-level uranium measure\", y = \"Estimated regression intercept\") +\n  theme_minimal() +\n  scale_x_continuous(breaks = seq(-1, 1, 0.5)) +\n  scale_y_continuous(limits = c(0.5, 2.0)) +\n  theme(\n    axis.title = element_text(size = 14),\n    axis.text = element_text(size = 12)\n  )",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Modelos Lineales Multinivel básicos</span>"
    ]
  }
]